add_executable(add add.cpp)
add_executable(add_item add_item.cpp)
add_executable(add_item2 add_item2.cpp)
add_executable(avg_price avg_price.cpp)
add_executable(comments comments.cpp)
add_executable(count count_numbers.cpp)
add_executable(forex for_ex.cpp)
add_executable(forcount forcount.cpp)
add_executable(itemio item_io.cpp)
add_executable(minimal main_only.cpp)
add_executable(mysum mysum.cpp)
add_executable(occurs occurs.cpp)
add_executable(whilecount whilecount.cpp)
target_include_directories(add_item PRIVATE ${CMAKE_SOURCE_DIR})
include(CTEst)
add_executable(test_01 test_01.cpp)
target_link_libraries(test_01 PRIVATE Boost::boost ${Boost_LIBRARIES})
target_include_directories(test_01 PRIVATE ${Boost_INCLUDE_DIRS})
add_test(NAME ch_01.sumas COMMAND test_01 --run_test=sumas --catch_system_error=yes --log_level=message)
add_test(NAME ch_01.sales COMMAND test_01 --run_test=sales --catch_system_error=yes --log_level=message)

